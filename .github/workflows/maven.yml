# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Talend CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  TALEND_PROJECT: TEST_CI_CD       
  TALEND_WORKSPACE: Dev 

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1. Checkout your Talend project from Git
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2. Install Java (required by Talend CommandLine)
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3. Download Talend CLI
    - name: Install Talend CLI
      run: |
        curl -sL https://update.talend.com/Studio/8/updates/runtime/latest/talend-cli.zip -o talend-cli.zip
        unzip talend-cli.zip -d talend-cli
        chmod +x talend-cli/tcli.sh

    # Step 4. Authenticate to Talend Cloud
    - name: Authenticate to Talend Cloud
      run: |
        ./talend-cli/tcli.sh login \
          --username "${{ secrets.TALEND_USERNAME }}" \
          --token "${{ secrets.TALEND_API_TOKEN }}" \
          --organization "${{ secrets.TALEND_ORG }}"

    # Step 5. Build all Talend Jobs
    - name: Build all Talend Jobs
      run: |
        JOBS=$(./talend-cli/tcli.sh listJobs --project "${{ env.TALEND_PROJECT }}" --branch main | grep -v "Name" | awk '{print $1}')

        for JOB in $JOBS; do
          echo "Building job: $JOB"
          ./talend-cli/tcli.sh buildJob \
            --project "${{ env.TALEND_PROJECT }}" \
            --job "$JOB" \
            --branch main \
            --target ./build-output
        done

    # Step 6. Deploy/export the job artifact
    - name: Deploy all Talend Jobs
      run: |
        for ARTIFACT in build-output/*.zip; do
          echo "Deploying artifact: $ARTIFACT"
          ./talend-cli/tcli.sh publishJob \
            --artifact "$ARTIFACT" \
            --workspace "${{ env.TALEND_WORKSPACE }}"
        done
